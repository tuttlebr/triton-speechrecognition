apiVersion: apps/v1
kind: Deployment
metadata:
  name: triton-speech-recognition-backend
  labels:
    run: triton-speech-recognition-backend
    app: triton-speech-recognition
spec:
  selector:
    matchLabels:
      run: triton-speech-recognition-backend
      app: triton-speech-recognition
  template:
    metadata:
      labels:
        run: triton-speech-recognition-backend
        app: triton-speech-recognition
    spec:
      affinity: {{- toYaml .Values.backendAffinity | nindent 12 }}
      imagePullSecrets:
        - name: ngc-secret
      hostname: triton-backend
      setHostnameAsFQDN: true
      containers:
        - name: triton-backend
          image: "{{ .Values.backEndImage.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backEndImage.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: grpc
              containerPort: 8001
              protocol: TCP
            - name: metrics
              containerPort: 8002
              protocol: TCP
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: triton-backend-storage
              mountPath: /Kaldi/data
          resources: {{- toYaml .Values.resources | nindent 12 }}
      nodeName: {{ .Values.backendNodeName }}
      initContainers:
        - name: init-server-config
          image: "{{ .Values.backEndImage.repository }}:{{ .Values.backEndImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backEndImage.pullPolicy }}
          command: ["/bin/sh"]
          args:
            [
              "-c",
              "while ! test -f /Kaldi/data/models/LibriSpeech/conf/online.conf; do echo Waiting for frontend... && sleep 2 ; done",
            ]
          volumeMounts:
            - name: triton-backend-storage
              mountPath: /Kaldi/data
      volumes:
        - name: dshm
          emptyDir: {}
        - name: triton-backend-storage
          persistentVolumeClaim:
            claimName: triton-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: triton-speech-recognition-frontend
  labels:
    run: triton-speech-recognition-frontend
    app: triton-speech-recognition
spec:
  selector:
    matchLabels:
      run: triton-speech-recognition-frontend
      app: triton-speech-recognition
  template:
    metadata:
      labels: 
        run: triton-speech-recognition-frontend
        app: triton-speech-recognition
    spec:
      affinity: {{- toYaml .Values.frontendAffinity | nindent 12 }}
      imagePullSecrets:
        - name: ngc-secret
      hostname: triton-frontend
      containers:
        - name: triton-speech-recognition-frontend
          image: "{{ .Values.frontEndImage.repository }}:{{ .Values.frontEndImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontEndImage.pullPolicy }}
          ports:
            - name: jupyter
              containerPort: 8888
              protocol: TCP
          args:
            - jupyter
            - lab
            - --ip=0.0.0.0
            - --no-browser
            - --allow-root
            - --port=8888
            - --ServerApp.token=''
            - --ServerApp.password=''
            - --ServerApp.allow_origin='*'
            - --ServerApp.base_url=/
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: triton-frontend-storage
              mountPath: /Kaldi/data
          resources: {{- toYaml .Values.resources | nindent 12 }}
      nodeName: {{ .Values.frontendNodeName }}
      initContainers:
        - name: init-data
          image: "{{ .Values.backEndImage.repository }}:{{ .Values.backEndImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backEndImage.pullPolicy }}
          command:
            - /workspace/scripts/prepare_data.sh
          volumeMounts:
            - name: triton-frontend-storage
              mountPath: /Kaldi/data
      volumes:
        - name: dshm
          emptyDir: {}
        - name: triton-frontend-storage
          persistentVolumeClaim:
            claimName: triton-pvc
